# Basic Types

## Address

```json
"r9cZA1mLK5R5Am25ArfXFmqgNwjZgnfk59"
```

Every DAC Ledger account has an *address*, which is a base58-encoding of a hash of the account's public key. DAC Ledger addresses always start with the lowercase letter `r`.

## Account Sequence Number

Every DAC Ledger account has a *sequence number* that is used to keep transactions in order. Every transaction must have a sequence number. A transaction can only be executed if it has the next sequence number in order, of the account sending it. This prevents one transaction from executing twice and transactions executing out of order. The sequence number starts at `1` and increments for each transaction that the account makes.

## Currency

Currencies are represented as either 3-character currency codes or 40-character uppercase hexadecimal strings. We recommend using uppercase [ISO 4217 Currency Codes](http://www.xe.com/iso4217.php) only. The string "DAC" is disallowed on trustlines because it is reserved for the DAC Ledger's native currency. The following characters are permitted: all uppercase and lowercase letters, digits, as well as the symbols `?`, `!`, `@`, `#`, `$`, `%`, `^`, `&`, `*`, `<`, `>`, `(`, `)`, `{`, `}`, `[`, `]`, and `|`.

## Value
A *value* is a quantity of a currency represented as a decimal string. Be careful: JavaScript's native number format does not have sufficient precision to represent all values. DAC has different precision from other currencies.

**DAC** has 6 significant digits past the decimal point. In other words, DAC cannot be divided into positive values smaller than `0.000001` (1e-6). DAC has a maximum value of `100000000000` (1e11).

**Non-DAC values** have 16 decimal digits of precision, with a maximum value of `9999999999999999e80`. The smallest positive non-DAC value is `1e-81`.


## Amount

Example amount:

```json
{
  "currency": "USD",
  "counterparty": "rMH4UxPrbuMa1spCBR98hLLyNJp4d8p4tM",
  "value": "100"
}
```

Example DAC amount:
```json
{
  "currency": "DAC",
  "value": "2000"
}
```

An *amount* is data structure representing a currency, a quantity of that currency, and the counterparty on the trustline that holds the value. For DAC, there is no counterparty.

A *lax amount* allows the counterparty to be omitted for all currencies. If the counterparty is not specified in an amount within a transaction specification, then any counterparty may be used for that amount.

A *lax lax amount* allows either or both the counterparty and value to be omitted.

A *balance* is an amount than can have a negative value.

<%- renderSchema('objects/amount-base.json') %>
